import org.gradle.internal.jvm.Jvm
import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

buildscript {
    ext {
        buildConfig = [
                'compileSdk': 29,
                'targetSdk': 29,
                'minSdk': 21,
                'robolectricSdk': 29
        ]

        versions = [
                'kotlin': '1.4.32',
                'kotlinCoroutines': '1.4.3',
                'androidxAppCompat': '1.2.0',
                'androidxRecyclerView': '1.1.0',
                'androidxLifecycle': '2.3.1',
                'androidxAnnotation': '1.2.0',
                'androidxNavigation': '2.3.5',
                'androidxConstraintLayout': '2.0.4',
                'androidxWorkManager': '2.5.0',
                'androidxFragment': '1.3.3',
                'androidxLocalBroadcastManager': '1.0.0',
                'androidxCore': '1.3.2',
                'androidxCardView': '1.0.0',
                'androidxPreference': '1.1.1',
                'androidxTestCore': '1.3.0',
                'materialComponents': '1.3.0',
                'fastAdapter': '5.4.1',
                'preferencesFix': '1.1.0',
                'okio': '2.10.0',
                'moshi': '1.12.0',
                'timber': '4.7.1',
                'koin': '2.2.2',
                'commonsIo': '2.6',
                'mime4j': '0.8.3',
                'okhttp': '4.9.1',
                'minidns': '1.0.0',
                'glide': '4.12.0',

                'androidxTestRunner': '1.3.0',
                'junit': '4.13.2',
                'robolectric': '4.5.1',
                'mockito': '3.9.0',
                'mockitoKotlin': '3.1.0',
                'truth': '1.1.2',

                'ktlint': '0.40.0'
        ]

        javaVersion = JavaVersion.VERSION_1_8
        kotlinJvmVersion = "1.8"
    }

    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.1.0"
    }
}

println "Gradle uses Java ${Jvm.current()}"

project.ext {
    testCoverage = project.hasProperty('testCoverage')
}

subprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }
    }

    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    ktlint {
        version = versions.ktlint
    }
}

@SuppressWarnings('unused')
static def getTag() {
    def tagVersion = "$System.env.VERSION"
    if (tagVersion == "null") {
        // with local un-commited changes a -DIRTY is added
        def processChanges = "git diff-index --name-only HEAD --".execute()
        def dirty = ""
        if (!processChanges.text.toString().trim().isEmpty())
            dirty = "-DIRTY"

        def process = "git describe --tags".execute()
        tagVersion = process.text.toString().trim() + dirty
    } else {
        def tagVersionToken = tagVersion.split("/")
        if (tagVersionToken.size() > 2)
            tagVersion = tagVersionToken[2]
        else
            tagVersion = tagVersionToken[0]
    }
    return tagVersion
}

@SuppressWarnings('unused')
static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

static def getGitOriginRemote() {
    def process = "git remote -v".execute()
    def values = process.text.toString().trim().split("\\r\\n|\\n|\\r")

    def found = values.find { it.startsWith("origin") && it.endsWith("(push)") }
    return found.replace("origin", "").replace("(push)", "").replace(".git", "").trim()
}
